# Generated by Django 2.2.7 on 2019-12-04 04:21

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('stats', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlowsFIpv4IpTotals',
            fields=[
                ('ipv4address', models.GenericIPAddressField(db_column='ipv4Address', primary_key=True, serialize=False)),
                ('count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'flows_f_ipv4_ip_totals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowsFIpv4Min',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('flowstartmilliseconds', models.BigIntegerField(blank=True, db_column='flowStartMilliseconds', null=True)),
                ('duration', models.BigIntegerField(blank=True, null=True)),
                ('sourceipv4address', models.GenericIPAddressField(blank=True, db_column='sourceIPv4Address', null=True)),
                ('destinationipv4address', models.GenericIPAddressField(blank=True, db_column='destinationIPv4Address', null=True)),
                ('octetdeltacount', models.BigIntegerField(blank=True, db_column='octetDeltaCount', null=True)),
                ('protocolidentifier', models.SmallIntegerField(blank=True, db_column='protocolIdentifier', null=True)),
                ('sourcetransportport', models.IntegerField(blank=True, db_column='sourceTransportPort', null=True)),
                ('destinationtransportport', models.IntegerField(blank=True, db_column='destinationTransportPort', null=True)),
                ('ingressinterface', models.BigIntegerField(blank=True, db_column='ingressInterface', null=True)),
                ('egressinterface', models.BigIntegerField(blank=True, db_column='egressInterface', null=True)),
                ('ipversion', models.SmallIntegerField(blank=True, db_column='ipVersion', null=True)),
            ],
            options={
                'db_table': 'flows_f_ipv4_min',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowsFIpv4Subset',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('flowstartmilliseconds', models.BigIntegerField(blank=True, db_column='flowStartMilliseconds', null=True)),
                ('flowendmilliseconds', models.BigIntegerField(blank=True, db_column='flowEndMilliseconds', null=True)),
                ('sourceipv4address', models.GenericIPAddressField(blank=True, db_column='sourceIPv4Address', null=True)),
                ('destinationipv4address', models.GenericIPAddressField(blank=True, db_column='destinationIPv4Address', null=True)),
                ('octetdeltacount', models.BigIntegerField(blank=True, db_column='octetDeltaCount', null=True)),
                ('protocolidentifier', models.SmallIntegerField(blank=True, db_column='protocolIdentifier', null=True)),
                ('sourcetransportport', models.IntegerField(blank=True, db_column='sourceTransportPort', null=True)),
                ('destinationtransportport', models.IntegerField(blank=True, db_column='destinationTransportPort', null=True)),
                ('ingressinterface', models.BigIntegerField(blank=True, db_column='ingressInterface', null=True)),
                ('egressinterface', models.BigIntegerField(blank=True, db_column='egressInterface', null=True)),
                ('ipversion', models.SmallIntegerField(blank=True, db_column='ipVersion', null=True)),
            ],
            options={
                'db_table': 'flows_f_ipv4_subset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowsFIpv4Totals',
            fields=[
                ('sourceipv4address', models.GenericIPAddressField(db_column='sourceIPv4Address', primary_key=True, serialize=False)),
                ('destinationipv4address', models.GenericIPAddressField(db_column='destinationIPv4Address')),
                ('totalbytes', models.DecimalField(blank=True, db_column='totalBytes', decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'flows_f_ipv4_totals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowsFProtocolCounts',
            fields=[
                ('protocolidentifier', models.SmallIntegerField(db_column='protocolIdentifier', primary_key=True, serialize=False)),
                ('count', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flows_f_protocol_counts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlowsFUniqueIpv4',
            fields=[
                ('ipv4address', models.GenericIPAddressField(db_column='ipv4Address', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'flows_f_unique_ipv4',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='flows',
            options={'managed': False},
        ),
    ]
